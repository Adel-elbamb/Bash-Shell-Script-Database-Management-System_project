**شرح مشروع Bash DBMS**

## **مقدمة**
هذا المشروع هو نظام إدارة قواعد بيانات بسيط باستخدام Bash. يسمح بإنشاء، عرض، الاتصال، وحذف قواعد البيانات بطريقة منظمة داخل مجلد `databases`.

---

## **المتغيرات الأساسية**
- `DB_ROOT`: مجلد تخزين قواعد البيانات.
- `LOG_FILE`: ملف السجلات لتسجيل العمليات.
- `mkdir -p "$DB_ROOT"`: ينشئ مجلد `databases` إذا لم يكن موجودًا.

---

## **تحسين المظهر بالألوان**
تمت إضافة ألوان وتأثيرات لجعل المخرجات أكثر وضوحًا باستخدام متغيرات ANSI مثل:
- `RED` للأخطاء ❌
- `GREEN` للنجاح ✅
- `YELLOW` للتحذيرات ⚠️
- `BLUE` للرسائل المعلوماتية 📘

---

## **وظائف مساعدة**
### **1. الطباعة التدريجية**
وظيفة `type_text` تطبع النص حرفًا بحرف مع تأخير زمني لتأثير جمالي.

### **2. شريط التحميل**
وظيفة `progress_bar` تعرض تقدم العمليات بشريط تحميل بسيط.

### **3. عرض الإشعارات**
وظيفة `show_alert` تعرض رسائل ملونة داخل صندوق لسهولة القراءة.

### **4. التحقق من اسم قاعدة البيانات**
وظيفة `validate_db_name` تتحقق من أن اسم القاعدة يتبع القواعد:
- يبدأ بحرف.
- يحتوي على 3 إلى 20 حرفًا، أرقام أو `_` فقط.

---

## **الوظائف الأساسية**
### **1. إنشاء قاعدة بيانات**
- يطلب من المستخدم إدخال الاسم.
- يتحقق من صحة الاسم.
- ينشئ مجلدًا جديدًا داخل `databases`.
- يسجل العملية في `dbms.log`.

### **2. عرض قواعد البيانات**
- يعرض جميع قواعد البيانات المخزنة داخل `databases`.
- إذا لم يكن هناك أي قاعدة بيانات، يظهر إشعار "🚫 No databases found.".

### **3. الاتصال بقاعدة بيانات**
- يطلب اسم القاعدة.
- إذا كانت موجودة، يتم تشغيل `connect_menu.sh` الخاص بها.

### **4. حذف قاعدة بيانات**
- يطلب اسم القاعدة.
- يعرض تحذيرًا قبل الحذف.
- في حالة التأكيد، يتم حذف القاعدة نهائيًا.
- يسجل العملية في `dbms.log`.

---

## **القائمة الرئيسية**
يتم عرض قائمة بها الخيارات التالية:
1️⃣ إنشاء قاعدة بيانات 📁
2️⃣ عرض قواعد البيانات 📂
3️⃣ الاتصال بقاعدة بيانات 🔌
4️⃣ حذف قاعدة بيانات 🗑️
5️⃣ الخروج 🚪

**يتم تنفيذ العملية المختارة وإعادة عرض القائمة تلقائيًا.**

---

